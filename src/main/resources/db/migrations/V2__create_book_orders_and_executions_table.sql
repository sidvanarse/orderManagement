CREATE TABLE TEST.BOOKS
(
    BOOK_NAME    VARCHAR2(100) NOT NULL,
    IS_CLOSED    VARCHAR2(1),
    PRIMARY KEY (BOOK_NAME)
);

GRANT SELECT,INSERT,UPDATE,DELETE on TEST.BOOKS TO test_rw;
GRANT SELECT on TEST.BOOKS TO test_ro;

CREATE TABLE TEST.ORDERS
(
    ORDER_ID           NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    BOOK_NAME          VARCHAR2(100) NOT NULL,
    INSTRUMENT_ID      NUMBER NOT NULL,
    QUANTITY           NUMBER NOT NULL,
    REMAINING_QUANTITY NUMBER NOT NULL,
    ENTRY_DATE         TIMESTAMP (6) NOT NULL,
    IS_ACTIVE          VARCHAR2(1) NOT NULL,
    TYPE               VARCHAR2(5) NOT NULL,
    PRICE              NUMBER NOT NULL,
    PREVIOUS_ORDER_ID  NUMBER
);

GRANT SELECT,INSERT,UPDATE,DELETE on TEST.ORDERS TO test_rw;
GRANT SELECT on TEST.ORDERS TO test_ro;

CREATE TABLE TEST.EXECUTIONS
(
    EXECUTION_ID       NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    BOOK_NAME          VARCHAR2(100) NOT NULL,
    INSTRUMENT_ID      NUMBER NOT NULL,
    QUANTITY           NUMBER NOT NULL,
    TYPE               VARCHAR2(5) NOT NULL,
    PRICE              NUMBER NOT NULL
);

GRANT SELECT,INSERT,UPDATE,DELETE on TEST.EXECUTIONS TO test_rw;
GRANT SELECT on TEST.EXECUTIONS TO test_ro;